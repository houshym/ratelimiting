apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:

  name: ingress-auth-and-ratelimit-filter
  namespace: istio-system

spec:
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.lua
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
            inlineCode: |
              function envoy_on_request(request_handle)
                local email = nil
                local meta = request_handle:streamInfo():dynamicMetadata()
                if meta and meta["envoy.filters.http.jwt_authn"] and meta["envoy.filters.http.jwt_authn"]["payload"] and meta["envoy.filters.http.jwt_authn"]["payload"]["email"] then
                  email = meta["envoy.filters.http.jwt_authn"]["payload"]["email"]
                end
                if not email then
                  email = request_handle:headers():get("x-auth-request-email")
                end
                if email then
                  request_handle:headers():add("acf-x-user-email", email)
                end
              end
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: envoy.filters.http.router
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.ratelimit
          typed_config:
            '@type': >-
              type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
            domain: istio-ratelimit
            rate_limit_service:
              grpc_service:
                envoy_grpc:
                  cluster_name: rate_limit_cluster
    - applyTo: VIRTUAL_HOST
      match:
        context: GATEWAY
      patch:
        operation: MERGE
        value:
          rate_limits:
            - actions:
                - request_headers:
                    descriptor_key: acf-x-user-email
                    header_name: acf-x-user-email
    - applyTo: CLUSTER
      match:
        context: GATEWAY
      patch:
        operation: ADD
        value:
          connect_timeout: 0.25s
          http2_protocol_options: {}
          load_assignment:
            cluster_name: rate_limit_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: ratelimit.istio-system.svc.cluster.local
                          port_value: 8081
          name: rate_limit_cluster
          type: STRICT_DNS
  workloadSelector:
    labels:
      app: istio-ingressgateway
